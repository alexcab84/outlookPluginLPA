{"version":3,"file":"commands.js","mappings":"AAOAA,OAAOC,SAAQ,WACb,IAkCFD,OAAOE,QAAQC,UAAU,UA3BzB,SAAgBC,GACd,IAAMC,EAAU,CACdC,KAAMN,OAAOO,aAAaC,4BAA4BC,qBACtDJ,QAAS,oBACTK,KAAM,aACNC,YAAY,GAEdX,OAAOY,QAAQC,GAAGC,mBAChB,uCACA,CAAEC,OAAQ,GAAIC,MAAO,KACrB,SAACC,GACC,IAAMC,EAASD,EAAYE,MAC3BD,EAAOE,gBAAgBpB,OAAOqB,UAAUC,uBAAuB,SAACC,GAC9DL,EAAOM,QAEPC,eAAeF,EACjB,GACF,IAGFvB,OAAOY,QAAQc,QAAQC,KAAKC,qBAAqBC,aAAa,SAAUxB,GAGxED,EAAM0B,WACR","sources":["webpack://office-addin-taskpane-js/./src/commands/commands.js"],"sourcesContent":["/*\n * Copyright (c) Microsoft Corporation. All rights reserved. Licensed under the MIT license.\n * See LICENSE in the project root for license information.\n */\n\n/* global Office */\n\nOffice.onReady(() => {\n  // If needed, Office.js is ready to be called.\n});\n\n/**\n * Shows a notification when the add-in command is executed.\n * @param event {Office.AddinCommands.Event}\n */\nfunction action(event) {\n  const message = {\n    type: Office.MailboxEnums.ItemNotificationMessageType.InformationalMessage,\n    message: \"Performed action.\",\n    icon: \"Icon.80x80\",\n    persistent: true,\n  };\n  Office.context.ui.displayDialogAsync(\n    \"https://localhost:3000/taskpane.html\",\n    { height: 30, width: 20 },\n    (asyncResult) => {\n      const dialog = asyncResult.value;\n      dialog.addEventHandler(Office.EventType.DialogMessageReceived, (arg) => {\n        dialog.close();\n        // eslint-disable-next-line no-undef\n        processMessage(arg);\n      });\n    }\n  );\n  // Show a notification message.\n  Office.context.mailbox.item.notificationMessages.replaceAsync(\"action\", message);\n\n  // Be sure to indicate when the add-in command function is complete.\n  event.completed();\n}\n\n// Register the function with Office.\nOffice.actions.associate(\"action\", action);\n"],"names":["Office","onReady","actions","associate","event","message","type","MailboxEnums","ItemNotificationMessageType","InformationalMessage","icon","persistent","context","ui","displayDialogAsync","height","width","asyncResult","dialog","value","addEventHandler","EventType","DialogMessageReceived","arg","close","processMessage","mailbox","item","notificationMessages","replaceAsync","completed"],"sourceRoot":""}